buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.5"
    }
}

apply plugin: 'java'
apply plugin: 'io.qameta.allure'

group 'sujeet.test'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

configurations.all {
}

repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "http://repo.maven.apache.org/maven2" }
}

configurations {
    agent
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

dependencies {
    agent "org.aspectj:aspectjweaver:1.8.4"
    testCompile group: 'junit', name: 'junit', version: junitVersion
    testCompile group: 'io.cucumber', name: 'cucumber-java', version: cucumberVersion
    testCompile group: 'io.cucumber', name: 'cucumber-junit', version: cucumberVersion
    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: seleniumVersion
    testCompile group: 'ru.yandex.qatools.allure', name: 'allure-cucumber-jvm-adaptor', version: allureCucumberJvmVersion
    testCompile group: 'org.aspectj', name: 'aspectjweaver', version: aspectJweaverVersion
    testCompile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: jacksonVersion
    testCompile group: 'io.rest-assured', name: 'rest-assured', version: restAssuredVersion
    testCompile group: 'io.rest-assured', name: 'json-schema-validator', version: restAssuredVersion
    testCompile group: 'io.cucumber', name: 'cucumber-picocontainer', version: cucumberPicoContainerVersion
    testCompile group: 'org.tinylog', name: 'tinylog', version: tinylogVersion
    testCompile group: 'org.assertj', name: 'assertj-core', version: assertJVersion
    testCompile group: 'io.qameta.allure', name: 'allure-cucumber3-jvm', version: cucumberAllureVersion

}


test.doFirst {
    jvmArgs "-Dcucumber.options=--plugin ru.yandex.qatools.allure.cucumberjvm.AllureReporter"
}

task runCucumber() {
    dependsOn assemble, compileTestJava

    doLast{
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty','--plugin','io.qameta.allure.cucumber3jvm.AllureCucumber3Jvm', 
                    '--tags', '@regression and not @ignore', 
                    '--glue', 'UITest.StepDefinitions', '--glue', 'UITest.Core', 
                    'src/test/resources/UITest/Features/']
            systemProperties project.properties.subMap(["env", "browser"])
        }
    }

}
 